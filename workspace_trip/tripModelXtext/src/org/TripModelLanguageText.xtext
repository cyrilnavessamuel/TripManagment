// automatically generated by Xtext
grammar org.TripModelLanguageText with org.eclipse.xtext.common.Terminals

import "http://www.example.org/trip_model" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

TripModel returns TripModel:
	{TripModel}
	'TripModel'
	'{'
		('trip' '{' trip+=Trip ( "," trip+=Trip)* '}' )?
		('location' '{' location+=location ( "," location+=location)* '}' )?
	'}';



Service returns Service:
	Service_Impl | OtherService | TravelService;

Trip returns Trip:
	'Trip'
	name=EString
	'{'
		('End' End=EDate)?
		('Start' Start=EDate)?
		'source' source=[location|EString]
		'destination' destination=[location|EString]
		('service' '{' service+=Service ( "," service+=Service)* '}' )?
	'}';

location returns location:
	{location}
	'location'
	name=EString;

Service_Impl returns Service:
	{Service}
	'Service'
	name=EString
	'{'
		('Cost' Cost=EFloat)?
		('Duration' Duration=EInt)?
		('Rating' Rating=EInt)?
		('Type' Type=EString)?
	'}';

EDate returns ecore::EDate:
	DATE /* TODO: implement this rule and an appropriate IValueConverter */;
	
	terminal DATE:
		('0'..'9')*'-'('0'..'9')*'-'('0'..'9')*
	;

EString returns ecore::EString:
	STRING | ID;

EFloat returns ecore::EFloat:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

EInt returns ecore::EInt:
	'-'? INT;

OtherService returns OtherService:
	'OtherService'
	name=EString
	'{'
		('Cost' Cost=EFloat)?
		('Duration' Duration=EInt)?
		('Rating' Rating=EInt)?
		('Type' Type=EString)?
		'location' location=[location|EString]
	'}';

TravelService returns TravelService:
	'TravelService'
	name=EString
	'{'
		('Cost' Cost=EFloat)?
		('Duration' Duration=EInt)?
		('Rating' Rating=EInt)?
		('Type' Type=EString)?
		'source' source=[location|EString]
		'destination' destination=[location|EString]
	'}';
